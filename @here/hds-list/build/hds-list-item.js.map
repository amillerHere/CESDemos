{"version":3,"file":"hds-list-item.js","sourceRoot":"","sources":["../src/hds-list-item.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,gBAAgB,CAAC;AAC1D,OAAO,gBAAgB,CAAC;AAExB,OAAO,mBAAmB,CAAC;AAC3B,OAAO,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAiB,MAAM,KAAK,CAAC;AAC9D,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,8BAA8B,CAAC;AACvD,OAAO,EAAC,MAAM,EAAC,MAAM,wBAAwB,CAAC;AAO9C;;;;GAIG;AAEI,IAAM,QAAQ,gBAAd,MAAM,QAAS,SAAQ,WAAW;IAAlC;;QAIL,eAAU,GAAG,IAAI,CAAC;QACyC,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QAEtB,iBAAY,GAAiB,SAAS,CAAC;QAChD,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,KAAK,CAAC;QACpB,YAAO,GAAoB,SAAS,CAAC;QACtD,iBAAY,GAAgB,QAAQ,CAAC;QACrC,SAAI,GAAiB,OAAO,CAAC;QACX,sBAAiB,GAAgB,SAAS,CAAC;IA4FzF,CAAC;IAxFC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,iBAAiB,EAAE,UAAQ,CAAC,aAAa,EAAE,CAAC;QACjE,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IAES,YAAY;QACpB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;YACzF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,aAAa,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9E,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,KAAK,GAAG,CAAsB,CAAC;QAC9F,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,EAAE;gBACjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;SACF;IACH,CAAC;IAES,OAAO,CAAC,kBAAkC;QAClD,IAAI,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACzE,IAAI,CAAC,cAAc,CAAC;YACpB,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAwB,QAAQ,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CACnF,CAAC;SACH;IACH,CAAC;IAES,MAAM;QACd,MAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,2BAA2B,EAAE,IAAI,CAAC,SAAS;SAC5C,CAAC;QACF,OAAO,CAAC,yBAAyB,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;QAC7E,OAAO,CAAC,sBAAsB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC;QAClD,OAAO,CAAC,2BAA2B,IAAI,CAAC,iBAAiB,EAAE,CAAC,GAAG,IAAI,CAAC;QAEpE,OAAO,IAAI,CAAA;;wCAEyB,QAAQ,CAAC,OAAO,CAAC;;yBAEhC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;;kBAE/B,IAAI,CAAC,WAAW;qBACb,IAAI,CAAC,QAAQ;;UAExB,IAAI,CAAC,UAAU,EAAE;;;;;;QAMnB,IAAI,CAAC,aAAa,EAAE;KACvB,CAAC;IACJ,CAAC;IAES,UAAU;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAO,OAAO,CAAC;QAC/B,OAAO,IAAI,CAAA;;;gBAGC,IAAI,CAAC,IAAI;oBACL,IAAI,CAAC,YAAY;;;KAGhC,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,WAAW;QACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,IAAI,CAAA;2BACU,IAAI,CAAC,EAAE;iBACjB,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW;;OAElE,CAAC;SACH;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;;AAzGM,eAAM,GAAG,MAAM,CAAC;AAChB,sBAAa,GAAG,CAAC,CAAC;AAClB,0BAAiB,GAAG,EAAC,GAAG,UAAU,CAAC,iBAAiB,EAAE,cAAc,EAAE,IAAI,EAAC,CAAC;AAExB;IAA1D,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;0CAAkB;AACjB;IAA1D,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;0CAAkB;AACjB;IAA1D,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;0CAAkB;AAClD;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;sCAAe;AACc;IAArD,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAC,CAAC;8CAAwC;AAChD;IAA5C,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;4CAAoB;AACnB;IAA5C,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;2CAAmB;AACpB;IAA1C,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;yCAAsC;AACtD;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;8CAAsC;AACrC;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;sCAA8B;AACX;IAA3C,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;mDAA4C;AACxE;IAAd,KAAK,CAAC,MAAM,CAAC;qDAAiD;AAC/C;IAAf,KAAK,CAAC,OAAO,CAAC;+CAAuC;AAjB3C,QAAQ;IADpB,aAAa,CAAC,eAAe,CAAC;GAClB,QAAQ,CA2GpB;SA3GY,QAAQ","sourcesContent":["import {customElement, BaseElement} from '@here/hds-base';\nimport '@here/hds-icon';\nimport {IconCategory} from '@here/hds-iconlibrary';\nimport '@here/hds-tooltip';\nimport {html, LitElement, nothing, PropertyValues} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\nimport {styles} from './hds-list-item.css.js';\nimport {ListPadding, ListVariant} from './hds-list.js';\n\nexport type ListItemSize = 'small' | 'medium' | 'large' | 'extra-large';\nexport type ListItemVariant = 'default' | 'success' | 'error';\nexport type ListItemSelectPayload = string;\n\n/**\n * @slot default Content for the item label\n *\n * @event {CustomEvent<string>} select Fired when the element has been selected with the id of the list item `ListItemSelectPayload`\n */\n@customElement('hds-list-item')\nexport class ListItem extends BaseElement {\n  static styles = styles;\n  static itemIdCounter = 0;\n  static shadowRootOptions = {...LitElement.shadowRootOptions, delegatesFocus: true};\n  isTabbable = true;\n  @property({type: Boolean, attribute: true, reflect: true}) disabled = false;\n  @property({type: Boolean, attribute: true, reflect: true}) selected = false;\n  @property({type: Boolean, attribute: true, reflect: true}) dragging = false;\n  @property({type: String}) icon?: string;\n  @property({type: String, attribute: 'icon-category'}) iconCategory: IconCategory = 'core-ui';\n  @property({type: Boolean, attribute: false}) hasTooltip = false;\n  @property({type: Boolean, attribute: false}) hasAnchor = false;\n  @property({type: String, attribute: true}) variant: ListItemVariant = 'default';\n  @property({type: String}) groupVariant: ListVariant = 'subtle';\n  @property({type: String}) size: ListItemSize = 'small';\n  @property({type: String, attribute: false}) horizontalPadding: ListPadding = 'default';\n  @query('slot') protected listItemContentSlot!: HTMLSlotElement;\n  @query('.text') protected textContainer!: HTMLElement;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.id = this.id || `hds-list-item-${++ListItem.itemIdCounter}`;\n    this.setAttribute('data-hds-tooltip', this.id);\n  }\n\n  protected firstUpdated() {\n    if (this.textContainer && this.textContainer.scrollWidth > this.textContainer.offsetWidth) {\n      this.hasTooltip = true;\n    }\n    const slotElements = this.listItemContentSlot?.assignedNodes({flatten: true});\n    const anchorTag = slotElements.find(element => element.nodeName === 'A') as HTMLAnchorElement;\n    if (anchorTag) {\n      this.hasAnchor = true;\n      if (anchorTag.scrollWidth > anchorTag.offsetWidth) {\n        this.hasTooltip = true;\n      }\n    }\n  }\n\n  protected updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has('selected') && !this.disabled && this.selected) {\n      this.updateComplete;\n      this.dispatchEvent(\n        new CustomEvent<ListItemSelectPayload>('select', {detail: this.id, bubbles: true})\n      );\n    }\n  }\n\n  protected render() {\n    const classes = {\n      item: true,\n      selected: this.selected,\n      disabled: this.disabled,\n      dragging: this.dragging,\n      'hds-list-item--has-anchor': this.hasAnchor,\n    };\n    classes[`hds-list-item-variant-${this.groupVariant}-${this.variant}`] = true;\n    classes[`hds-list-item-size-${this.size}`] = true;\n    classes[`hds-list-item-h-padding-${this.horizontalPadding}`] = true;\n\n    return html`\n      <div\n        class=\"-hds-list-item-wrapper ${classMap(classes)}\"\n        role=\"option\"\n        aria-selected=\"${ifDefined(this.selected)}\"\n        tabindex=\"0\"\n        @click=\"${this.onItemClick}\"\n        ?disabled=\"${this.disabled}\"\n      >\n        ${this.renderIcon()}\n        <span class=\"text\">\n          <slot></slot>\n        </span>\n        <slot name=\"right\"></slot>\n      </div>\n      ${this.renderTooltip()}\n    `;\n  }\n\n  protected renderIcon() {\n    if (!this.icon) return nothing;\n    return html`\n      <hds-icon\n        class=\"icon\"\n        name=\"${this.icon}\"\n        category=\"${this.iconCategory}\"\n        size=\"16px\"\n      ></hds-icon>\n    `;\n  }\n\n  protected async onItemClick() {\n    if (!this.disabled) {\n      this.selected = true;\n    }\n  }\n\n  private renderTooltip() {\n    if (this.hasTooltip) {\n      return html`\n        <hds-tooltip id=\"${this.id}\" position=\"right\">\n          <div>${this.listItemContentSlot.assignedNodes()[0]?.textContent}</div>\n        </hds-tooltip>\n      `;\n    }\n    return nothing;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-list-item': ListItem;\n  }\n}\n"]}