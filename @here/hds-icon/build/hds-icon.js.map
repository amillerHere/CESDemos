{"version":3,"file":"hds-icon.js","sourceRoot":"","sources":["../src/hds-icon.ts"],"names":[],"mappings":"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","sourcesContent":["import {customElement} from '@here/hds-base';\nimport * as HDSIconLibrary from '@here/hds-iconlibrary';\nimport {IconCategory} from '@here/hds-iconlibrary';\nimport {html, LitElement, PropertyValues} from 'lit';\nimport {property, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\nimport {styles} from './hds-icon.css.js';\n\nexport type IconStyle = 'solid' | 'outline';\nexport type IconSvgSize = '8px' | '16px' | '24px';\nexport type IconNotFoundType = 'FontNotFound' | 'CategoryNotFound' | 'IconNotFound';\n\nexport type IconNotFoundPayload = {\n  type: IconNotFoundType;\n  message: string;\n  category: IconCategory;\n  name: string;\n  style: IconStyle;\n  size: IconSvgSize;\n};\n\n/**\n * @event {CustomEvent<{type: IconErrorType, message: string, category: IconCategory, name: string, style: IconStyle, size: IconSvgSize}>} notfound Fired when the icon doesn't exist. `IconNotFoundPayload`\n *\n * @cssprop --hds-icon-color  Color value for the icon\n * @cssprop --hds-icon-size   Size value for the icon, overrides the attribute `size`\n *\n * */\n@customElement('hds-icon')\nexport class Icon extends LitElement {\n  static styles = styles;\n  private static _nameByMediaType: any;\n  @property({type: String}) name = '';\n  @property({type: String}) category: IconCategory = 'core-ui';\n  @property({type: String, attribute: 'icon-style'}) iconStyle: IconStyle = 'solid';\n  @property({type: String}) size = '16px';\n  @property({type: String, attribute: 'aria-label'}) ariaLabel = '';\n  @state() errorEventPayload?: IconNotFoundPayload;\n  private svgSize: IconSvgSize = '16px';\n\n  static getNameByMediaType(type: string) {\n    if (Icon._nameByMediaType === undefined) {\n      Icon._nameByMediaType = {\n        'image/jpeg': 'JPG-File',\n        'image/jpg': 'JPG-File',\n        'application/msword': 'DOC-File',\n        'application/postscript': 'EPS-File',\n        'application/eps': 'EPS-File',\n        'application/x-eps': 'EPS-File',\n        'image/eps': 'EPS-File',\n        'image/x-eps': 'EPS-File',\n        'image/gif': 'GIF-File',\n        'text/html': 'HTML-File',\n        'audio/mpeg': 'MP3-File',\n        'application/pdf': 'PDF-File',\n        'image/png': 'PNG-File',\n        'image/svg+xml': 'SVG-File',\n        'image/tiff': 'TIFF-File',\n        'text/plain': 'TXT-File',\n        'audio/wav': 'WAV-File',\n        'audio/x-wav': 'WAV-File',\n        'application/zip': 'ZIP-File',\n      };\n    }\n\n    if (type in Icon._nameByMediaType) return Icon._nameByMediaType[type];\n    if (type.endsWith('/json') || type.endsWith('+json')) return 'JSON-File';\n    if (type.includes('image/')) return 'image';\n    if (type.includes('compressed')) return 'archive';\n\n    return 'file';\n  }\n\n  protected async updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has('errorEventPayload')) {\n      // FIXME: We set the timeout to the next browser loop so this event can be caught by React\n      setTimeout(() => {\n        this.dispatchEvent(\n          new CustomEvent<IconNotFoundPayload>('notfound', {\n            detail: this.errorEventPayload,\n            bubbles: true,\n            composed: true,\n          })\n        );\n      }, 0);\n    }\n  }\n\n  protected render() {\n    // Create a new var to not trigger the update\n    let styleIcon = this.iconStyle;\n    // Only icons bigger than 24px will be style outline.\n    // if an icon smaller we revert to 16px solid.\n    const size = parseInt(this.size, 10);\n    if (size >= 24) {\n      this.svgSize = '24px';\n    } else {\n      styleIcon = 'solid';\n      if (size < 16) {\n        this.svgSize = '8px';\n      }\n    }\n    let error;\n    let errorType: IconNotFoundType = 'IconNotFound';\n\n    // Check if font has been loaded\n    const allIconsFontFamily = `hds-iconlibrary-${this.svgSize}`;\n    const categoryFontFamily = `hds-iconlibrary-${this.category}-${this.svgSize}`;\n    let fontFamily;\n    if (!document.fonts) {\n      error =\n        'Fonts not found in document. Maybe test environment or SSR? Falling back to all icons font family';\n      // eslint-disable-next-line no-console\n      // console.warn(error);\n      this.errorEventPayload = {\n        message: error,\n        name: this.name,\n        type: 'FontNotFound',\n        category: this.category,\n        size: this.svgSize,\n        style: styleIcon,\n      };\n      fontFamily = allIconsFontFamily;\n    }\n    document.fonts &&\n      document.fonts.forEach(value => {\n        // Firefox returns the name between double quotes\n        const fontFamilyName = value.family.replace(/\"([^\"]+(?=\"))\"/g, '$1');\n        if (!fontFamilyName) return;\n        if (fontFamily && fontFamily === allIconsFontFamily) return;\n        if (fontFamilyName === allIconsFontFamily) {\n          fontFamily = allIconsFontFamily;\n        } else if (fontFamilyName === categoryFontFamily) {\n          fontFamily = categoryFontFamily;\n        }\n      });\n\n    if (!fontFamily) {\n      error = `Font ${categoryFontFamily} has not been found! Make sure font has been loaded properly`;\n      errorType = 'FontNotFound';\n      fontFamily = categoryFontFamily;\n    }\n    let codepointsKey;\n    let codepointKey;\n    if (fontFamily === allIconsFontFamily) {\n      codepointsKey = `HDS_ICONLIBRARY_${this.svgSize.toUpperCase()}_CODEPOINTS`;\n      codepointKey = `${this.category}-${this.name}_${styleIcon}_${this.svgSize}`;\n    } else {\n      codepointsKey = `HDS_ICONLIBRARY_${this.category\n        .replaceAll('-', '_')\n        .toUpperCase()}_${this.svgSize.toUpperCase()}_CODEPOINTS`;\n      codepointKey = `${this.name}_${styleIcon}_${this.svgSize}`;\n\n      // Check if category exists\n      if (!HDSIconLibrary[codepointsKey]) {\n        errorType = 'CategoryNotFound';\n        error = `Category ${this.category}  not found!`;\n      }\n    }\n    // Check if the icon exists\n    const codepoint: number = HDSIconLibrary[codepointsKey][codepointKey];\n    if (!codepoint) {\n      errorType = 'IconNotFound';\n      error = `Icon ${this.category}/${this.name} style ${styleIcon} size ${this.svgSize} not found!`;\n    }\n    // During test the font is not loaded. We skipped if the font is not loaded for core-ui\n    if (error && !(this.category === 'core-ui' && errorType === 'FontNotFound')) {\n      // eslint-disable-next-line no-console\n      console.warn(error);\n      this.errorEventPayload = {\n        type: errorType,\n        message: error,\n        category: this.category,\n        name: this.name,\n        style: styleIcon,\n        size: this.svgSize,\n      };\n    }\n\n    const cssClasses = {};\n    cssClasses[`size-${this.svgSize}`] = true;\n    cssClasses[`style-${styleIcon}`] = true;\n    const cssStyles = {\n      '--hds-icon-actual-size': `var(--hds-icon-size, calc(${parseInt(\n        this.size,\n        10\n      )}rem / var(--hds-font-baseline)))`,\n      'font-family': `${fontFamily}, serif !important`,\n    };\n    return html`\n      <i\n        class=\"hds-icon ${classMap(cssClasses)}\"\n        style=\"${styleMap(cssStyles)}\"\n        data-unicode=\"${Number.isNaN(codepoint) || !codepoint\n          ? ''\n          : String.fromCodePoint(codepoint)}\"\n        role=\"img\"\n        aria-label=\"${this.ariaLabel !== '' ? this.ariaLabel : this.name}\"\n      ></i>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-icon': Icon;\n  }\n}\n"]}