{"version":3,"file":"hds-tab-panel-container.js","sourceRoot":"","sources":["../src/hds-tab-panel-container.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAC,IAAI,EAAE,UAAU,EAAiB,MAAM,KAAK,CAAC;AACrD,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAC,QAAQ,EAAC,MAAM,oBAAoB,CAAC;AAE5C;;GAEG;AAEI,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,UAAU;IAA1C;;QAC6D,aAAQ,GAAG,EAAE,CAAC;QACV,kBAAa,GAAG,EAAE,CAAC;QAIjF,kBAAa,GAAe,EAAE,CAAC;IAyBzC,CAAC;IAvBW,OAAO,CAAC,kBAAkC;QAClD,IAAI,kBAAkB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;YAC3C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5C;IACH,CAAC;IAES,MAAM;QACd,OAAO,IAAI,CAAA,uBAAuB,IAAI,CAAC,aAAa,WAAW,CAAC;IAClE,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU;aACjC,aAAa,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;aAC9B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,QAAQ,CAAe,CAAC;QACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7C,CAAC;IAEO,iBAAiB,CAAC,OAAe;QACvC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACjC,6CAA6C;YAC7C,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,KAAK,OAAO,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AA9BmE;IAAjE,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAC,CAAC;mDAAe;AACV;IAArE,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAC,CAAC;wDAAoB;AAE1E;IAAd,KAAK,CAAC,MAAM,CAAC;qDAAwC;AAJ3C,iBAAiB;IAD7B,aAAa,CAAC,yBAAyB,CAAC;GAC5B,iBAAiB,CA+B7B;SA/BY,iBAAiB","sourcesContent":["import {customElement} from '@here/hds-base';\nimport {html, LitElement, PropertyValues} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {TabPanel} from './hds-tab-panel.js';\n\n/**\n * @slot default Container for the `hds-tab-panel` elements\n */\n@customElement('hds-tab-panel-container')\nexport class TabPanelContainer extends LitElement {\n  @property({type: String, reflect: true, attribute: 'tab-bar-id'}) tabBarId = '';\n  @property({type: String, reflect: true, attribute: 'selected-panel'}) selectedPanel = '';\n\n  @query('slot') protected panelSlots!: HTMLSlotElement;\n\n  private panelElements: TabPanel[] = [];\n\n  protected updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has('selectedPanel')) {\n      this._setSelectedPanel(this.selectedPanel);\n    }\n  }\n\n  protected render() {\n    return html` <slot @slotchange=\"${this._onSlotChange}\"></slot>`;\n  }\n\n  private _onSlotChange() {\n    this.panelElements = this.panelSlots\n      .assignedNodes({flatten: true})\n      .filter(e => e instanceof TabPanel) as TabPanel[];\n    this._setSelectedPanel(this.selectedPanel);\n  }\n\n  private _setSelectedPanel(panelId: string) {\n    this.panelElements.forEach(panel => {\n      // eslint-disable-next-line no-param-reassign\n      panel.show = panel.id === panelId;\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-tab-panel-container': TabPanelContainer;\n  }\n}\n"]}