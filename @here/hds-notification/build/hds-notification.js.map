{"version":3,"file":"hds-notification.js","sourceRoot":"","sources":["../src/hds-notification.ts"],"names":[],"mappings":"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","sourcesContent":["import {customElement} from '@here/hds-base';\nimport '@here/hds-button';\nimport {IconStyle} from '@here/hds-icon';\nimport {IconCategory} from '@here/hds-iconlibrary';\nimport {html, LitElement, PropertyValues} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styles} from './hds-notification.css.js';\n\nexport type NotificationVariant = 'information' | 'confirmation' | 'warning' | 'error';\nexport type NotificationChangePayload = {open: boolean};\n\n/**\n *\n * @slot default Main content for the notification\n *\n * @event {CustomEvent<{open: boolean}>} change Fired when the notification changes the state: open / close `NotificationChangePayload`\n * @event {CustomEvent} action Fired when the action button has been clicked\n */\n@customElement('hds-notification')\nexport class Notification extends LitElement {\n  static styles = styles;\n\n  @property({type: Boolean, reflect: true}) open = false;\n  @property({type: String, attribute: 'notification-title', reflect: true}) notificationTitle = '';\n  @property({type: String}) variant: NotificationVariant = 'information';\n  @property({type: Number}) duration = 3;\n  @property({type: String}) icon: string | undefined = undefined;\n  @property({type: String, attribute: 'icon-category'}) iconCategory: IconCategory = 'core-ui';\n  @property({type: String, attribute: 'icon-style'}) iconStyle: IconStyle = 'outline';\n  @property({type: Boolean, attribute: 'keep-node'}) keepNode = false;\n  @property({type: Boolean, reflect: true}) inline = false;\n  @property({type: Boolean, reflect: true, attribute: 'hide-close'}) hideClose = false;\n  @property({type: String, attribute: 'action-text'}) actionText?;\n  @property({type: String, attribute: 'close-aria-label'}) closeAriaLabel = 'Close';\n\n  // eslint-disable-next-line no-undef\n  private _timeoutId: NodeJS.Timeout | null = null;\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.clearTimeout();\n  }\n\n  close() {\n    this.open = false;\n    this.clearTimeout();\n    if (!this.keepNode) {\n      this.remove();\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    if (changedProperties.has('open') && changedProperties.get('open') !== undefined) {\n      this.dispatchEvent(\n        new CustomEvent<NotificationChangePayload>('change', {\n          detail: {\n            open: this.open,\n          },\n        })\n      );\n    }\n    if (this.open && this._timeoutId === null && this.duration > 0) {\n      this._timeoutId = setTimeout(() => {\n        this.close();\n      }, this.duration * 1000);\n    }\n  }\n\n  protected render() {\n    const classes = {\n      open: this.open,\n      information: this.variant === 'information',\n      confirmation: this.variant === 'confirmation',\n      warning: this.variant === 'warning',\n      error: this.variant === 'error',\n      inline: this.inline,\n    };\n    return html`\n      <div\n        id=\"notification\"\n        class=\"wrapper ${classMap(classes)}\"\n        role=\"alert\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n      >\n        <div class=\"hds-notification__icon\">\n          <hds-icon\n            name=\"${this.getIconName()}\"\n            size=\"24px\"\n            category=\"${this.iconCategory}\"\n            icon-style=\"${this.iconStyle}\"\n          ></hds-icon>\n        </div>\n        <div class=\"hds-notification__content-wrapper\">\n          <div class=\"hds-notification__content\">\n            ${\n              !this.inline\n                ? html` <div class=\"hds-notification__header\">${this.notificationTitle}</div>`\n                : ''\n            }\n            <slot></slot>\n          </div>\n          \n          ${\n            this.inline && this.actionText\n              ? html` <div class=\"hds-notification__action\">\n                  <hds-button variant=\"link\" @click=\"${this._handleClickAction}\" size=\"small\"\n                    >${this.actionText}\n                  </hds-button>\n                </div>`\n              : ''\n          }\n          \n          ${\n            this.hideClose\n              ? ''\n              : html` <hds-button\n                  class=\"clear\"\n                  icon=\"cross\"\n                  variant=\"subtle\"\n                  @click=\"${this.close}\"\n                  size=\"small\"\n                  aria-label=\"${this.closeAriaLabel}\"\n                ></hds-button>`\n          }\n        </div>\n      </div>\n      </div>`;\n  }\n\n  private clearTimeout() {\n    if (this._timeoutId !== null) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  private getIconName() {\n    if (this.icon) {\n      return this.icon;\n    }\n    this.iconCategory = 'core-ui';\n    switch (this.variant) {\n      case 'information':\n        return 'information';\n      case 'confirmation':\n        return 'confirm';\n      case 'warning':\n        return 'attention';\n      case 'error':\n        return 'alert';\n      default:\n        return 'information';\n    }\n  }\n\n  private _handleClickAction() {\n    this.dispatchEvent(new CustomEvent('action'));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hds-notification': Notification;\n  }\n}\n"]}